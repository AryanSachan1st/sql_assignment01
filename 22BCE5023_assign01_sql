-- assignment1- Aryan Sachan 22BCE5023
CREATE DATABASE ORG1;
SHOW DATABASES; 
USE ORG1; 
CREATE TABLE Worker ( 
	WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT, 
	FIRST_NAME CHAR(25), 
    LAST_NAME CHAR(25), 
    SALARY INT(15), 
    JOINING_DATE DATETIME, 
    DEPARTMENT CHAR(25)
); 
INSERT INTO Worker (WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) 
VALUES (001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'), 
(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'), 
(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'), 
(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),
(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'), 
(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'), 
(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00', 'Account'), 
(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin'); 

CREATE TABLE Bonus ( 
	WORKER_REF_ID INT, 
    BONUS_AMOUNT INT(10), 
    BONUS_DATE DATETIME, 
    FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE 
); 
INSERT INTO Bonus (WORKER_REF_ID, BONUS_AMOUNT, BONUS_DATE) 
VALUES (001, 5000, '16-02-20'), 
(002, 3000, '16-06-11'), 
(003, 4000, '16-02-20'), 
(001, 4500, '16-02-20'), 
(002, 3500, '16-06-11');
CREATE TABLE Title ( 
	WORKER_REF_ID INT, 
    WORKER_TITLE CHAR(25), 
    AFFECTED_FROM DATETIME, 
    FOREIGN KEY (WORKER_REF_ID) REFERENCES Worker(WORKER_ID) ON DELETE CASCADE 
); 
INSERT INTO Title (WORKER_REF_ID, WORKER_TITLE, AFFECTED_FROM) 
VALUES (001, 'Manager', '2016-02-20 00:00:00'), 
(002, 'Executive', '2016-06-11 00:00:00'), 
(008, 'Executive', '2016-06-11 00:00:00'), 
(005, 'Manager', '2016-06-11 00:00:00'), 
(004, 'Asst. Manager', '2016-06-11 00:00:00'), 
(007, 'Executive', '2016-06-11 00:00:00'), 
(006, 'Lead', '2016-06-11 00:00:00'), 
(003, 'Lead', '2016-06-11 00:00:00');

-- 1
SELECT FIRST_NAME as WORKER_NAME from Worker;

-- 2
SELECT UPPER(FIRST_NAME) FROM Worker;

-- 3 
SELECT DISTINCT DEPARTMENT FROM Worker;

-- 4
SELECT SUBSTRING(FIRST_NAME, 1, 3) FROM Worker;

-- 5
SELECT POSITION('a' IN FIRST_NAME) FROM Worker WHERE FIRST_NAME = 'Amitabh';

-- 6
SELECT RTRIM(DEPARTMENT) FROM Worker;

-- 7
SELECT LTRIM(DEPARTMENT) FROM Worker;

-- 8
SELECT DISTINCT DEPARTMENT, LENGTH(DEPARTMENT) AS Dept_Length FROM Worker;

-- 9
SELECT REPLACE(FIRST_NAME, 'a', 'A') FROM Worker;

-- 10
SELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS COMPLETE_NAME FROM Worker;

-- 11
SELECT * FROM Worker ORDER BY FIRST_NAME ASC;

-- 12
SELECT * FROM Worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

-- query 13
select * from Worker
where FIRST_NAME in ("Vipul", "Satish");

-- query 14
select * from Worker
where FIRST_NAME not in ("Vipul", "Satish");

-- query 15
select * from Worker
where DEPARTMENT = "admin";

-- query 16
SELECT * 
FROM Worker
WHERE FIRST_NAME LIKE '%a%';

-- query 17
SELECT *
FROM Worker
WHERE FIRST_NAME LIKE '%a';

-- query 18
SELECT *
FROM Worker
WHERE FIRST_NAME LIKE '____h' AND LENGTH(FIRST_NAME) = 6;

-- query 19
SELECT *
FROM Worker
WHERE SALARY BETWEEN 100000 AND 500000;

-- query 20
SELECT *
FROM Worker
WHERE JOINING_DATE BETWEEN '2014-02-01' AND '2014-02-28';

-- query 21
SELECT COUNT(*) AS 'Admin Department Count'
FROM Worker
WHERE DEPARTMENT = 'Admin';

-- query 22
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM Worker
WHERE SALARY BETWEEN 50000 AND 100000;

-- query 23
SELECT DEPARTMENT, COUNT(*) AS 'Number of Workers'
FROM Worker
GROUP BY DEPARTMENT
ORDER BY `Number of Workers` DESC;

-- query 24
SELECT w.WORKER_ID, w.FIRST_NAME, w.LAST_NAME, w.SALARY, w.JOINING_DATE, w.DEPARTMENT
FROM Worker w
INNER JOIN Title t ON w.WORKER_ID = t.WORKER_REF_ID
WHERE t.WORKER_TITLE = 'Manager';

-- query 25
SELECT WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT
FROM Worker
GROUP BY WORKER_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT
HAVING COUNT(*) > 1;

-- query 26
SELECT *
FROM (
  SELECT *, ROW_NUMBER() OVER (ORDER BY WORKER_ID) AS row_num
  FROM Worker
) AS temp_table
WHERE row_num % 2 != 0;

-- query 27
SELECT *
FROM (
  SELECT *, ROW_NUMBER() OVER (ORDER BY WORKER_ID) AS row_num
  FROM Worker
) AS temp_table
WHERE row_num % 2 = 0;

-- query 28
CREATE TABLE Worker_Clone AS
SELECT * 
FROM Worker;

-- query 29
SELECT w.WORKER_ID, w.FIRST_NAME, w.LAST_NAME, b.BONUS_AMOUNT, b.BONUS_DATE
FROM Worker w
INNER JOIN Bonus b
ON w.WORKER_ID = b.WORKER_REF_ID;

-- query 30
SELECT w.WORKER_ID, w.FIRST_NAME, w.LAST_NAME, w.SALARY, w.JOINING_DATE, w.DEPARTMENT
FROM Worker w
LEFT JOIN Bonus b
ON w.WORKER_ID = b.WORKER_REF_ID
WHERE b.WORKER_REF_ID IS NULL;

-- query 31
SELECT NOW() AS current_datetime;

-- query 32
SELECT *
FROM Worker
ORDER BY WORKER_ID
LIMIT 10;

-- query 33
SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 1 OFFSET 4;

-- query 34
SELECT DISTINCT SALARY
FROM Worker
WHERE 4 = (
    SELECT COUNT(DISTINCT SALARY)
    FROM Worker
    WHERE SALARY > w.SALARY
);

-- query 35
SELECT w1.FIRST_NAME, w1.LAST_NAME, w1.SALARY
FROM Worker w1
INNER JOIN Worker w2 ON w1.SALARY = w2.SALARY
GROUP BY w1.WORKER_ID
HAVING COUNT(w1.WORKER_ID) > 1;

-- query 36
SELECT MAX(SALARY) AS SecondHighestSalary
FROM Worker
WHERE SALARY < (
    SELECT MAX(SALARY) 
    FROM Worker
);

-- query 37
SELECT *
FROM Worker
WHERE WORKER_ID = 1

UNION

SELECT *
FROM Worker
WHERE WORKER_ID = 1;

-- query 38
SELECT w.WORKER_ID, w.FIRST_NAME, w.LAST_NAME, b.BONUS_AMOUNT, b.BONUS_DATE
FROM Worker w
INNER JOIN Bonus b
ON w.WORKER_ID = b.WORKER_REF_ID;

-- query 39
SELECT *
FROM (
  SELECT *, ROW_NUMBER() OVER (ORDER BY WORKER_ID) AS row_num
  FROM Worker
) AS temp_table
WHERE row_num <= (SELECT COUNT(*) FROM Worker) / 2;

-- query 40
SELECT DEPARTMENT, COUNT(*) AS num_people
FROM Worker
GROUP BY DEPARTMENT
HAVING COUNT(*) < 5;

-- query 41
SELECT DEPARTMENT, COUNT(*) AS num_people
FROM Worker
GROUP BY DEPARTMENT;

-- query 42
SELECT *
FROM Worker
ORDER BY WORKER_ID DESC
LIMIT 1;

-- query 43
SELECT *
FROM Worker
LIMIT 1;

-- query 44
SELECT *
FROM Worker
ORDER BY WORKER_ID DESC
LIMIT 5;

-- query 45
SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT
FROM (
  SELECT *, ROW_NUMBER() OVER (PARTITION BY DEPARTMENT ORDER BY SALARY DESC) AS rn
  FROM Worker
) AS temp_table
WHERE rn = 1;

-- query 46
SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 3;

-- query 47
SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY ASC
LIMIT 3;

-- query 48
SELECT DISTINCT SALARY
FROM Worker
ORDER BY SALARY DESC
LIMIT 1 OFFSET 4;

-- query 49
SELECT DEPARTMENT, SUM(SALARY) AS total_salary
FROM Worker
GROUP BY DEPARTMENT;

-- query 50
SELECT FIRST_NAME, LAST_NAME
FROM Worker
WHERE SALARY = (
  SELECT MAX(SALARY) 
  FROM Worker
);
